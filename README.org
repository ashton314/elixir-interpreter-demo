#+TITLE: Elixir Interpreter Demo

Demonstration of how to write an interpeter in Elixir

* Synopsis

TODO

* Description

This project shows you how to write an interpreter for a small language in Elixir. It does /not/ cover how to parse syntax. (Parsing is boring) Instead, we take an AST and interpret that.

** Technical Description

This is a big-step, eager, call-by-value interpreter that implements the lambda calculus and some basic mathematical operators. The environment is not factored: values are stored directly with the variables they bind. It does not support mutation. We use lexical scope. Error handling right now is modeled using Elixir's ~raise~ mechanism-we don't use an Error or Maybe Monad to model that or anything.

* License

[[file:LICENSE][MIT License]]. Do whatever you want with this, just no warranty.

* Author

Ashton Wiersdorf <ashton.wiersdorf@pobox.com>
